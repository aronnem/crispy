{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Calculate  optimal extraction error due to cross-dispersion shift"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Gaussian input"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Populating the interactive namespace from numpy and matplotlib\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x11aff3110>"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nRUFERPr8L8klJMaLIgc8AAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x111b48e10>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "%pylab inline --no-import-all\n",
    "matplotlib.rcParams['image.origin'] = 'lower'\n",
    "matplotlib.rcParams['image.interpolation'] = 'nearest'\n",
    "\n",
    "FWHM = 2\n",
    "sig=FWHM/2.35\n",
    "flux = 1 \n",
    "x = np.arange(-5,5,1)\n",
    "gaussian_model = flux*np.exp(-x**2/2./sig**2)/sig/np.sqrt(2.*np.pi)\n",
    "plt.plot(x,gaussian_model)\n",
    "plt.xlabel('Pixels')\n",
    "plt.ylabel('Flux per pixel (1D only)')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Construct gaussian matched filter, offset by some amount"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "('Testing matched filter: measured:', 1.0000000000000002, ' input: ', 1)\n"
     ]
    }
   ],
   "source": [
    "offset = 0.0\n",
    "matched_filter = np.exp(-(x-offset)**2/2./sig**2)/sig/np.sqrt(2.*np.pi)\n",
    "matched_filter /= np.sum(matched_filter**2)\n",
    "print(\"Testing matched filter: measured:\",np.sum(gaussian_model*matched_filter),\" input: \",flux)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Do this for a range of offsets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x11affed90>]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\ngg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11affed50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "offsets = np.arange(0.0,2.,0.1)\n",
    "measured_values = np.zeros(len(offsets))\n",
    "for i in range(len(offsets)):\n",
    "    offset = offsets[i]\n",
    "    matched_filter = np.exp(-(x-offset)**2/2./sig**2)/sig/np.sqrt(2.*np.pi)\n",
    "    matched_filter /= np.sum(matched_filter**2)\n",
    "    measured_values[i] = np.sum(gaussian_model*matched_filter)\n",
    "\n",
    "plt.plot(offsets,measured_values/flux)\n",
    "plt.xlabel(\"Pixel offset\")\n",
    "plt.ylabel(\"Fraction of recovered flux\")\n",
    "mf = np.exp(-(offsets)**2/2./sig**2/2.)\n",
    "plt.plot(offsets,mf)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Do this in 2D"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": false,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 0.09560103  0.15640978  0.10811484  0.17688322]\n",
      "[ 0.17802505  0.29126107  0.20132785  0.32938603]\n",
      "0.265553988831\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAP8AAAD8CAYAAAC4nHJkAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAACx5JREFUeJzt3X+o3fV9x/HnyyQmTXRWsbhWZcqwDikMy91qKyvDOHBr\nqf1jDAsWVwoZY2ttKRS7f/y3f5TS/jEKQW1lFctIhUpXukraUgYjLP6gatLWop3GRuPmps5N88P3\n/rjHkYZkudzzOT/S9/MB4Z7zvYfP902S5/1+z7nnfm+qCkn9nLXoASQthvFLTRm/1JTxS00Zv9SU\n8UtNGb/UlPFLTRm/1NTGee7s7GyuLWyb5y6lVl7jVQ7X61nLY+ca/xa28Z5sn+cupVb21O41P9bT\nfqkp45eaMn6pKeOXmjJ+qSnjl5oyfqkp45eaMn6pKeOXmjJ+qSnjl5oyfqkp45eaMn6pKeOXmjJ+\nqSnjl5oyfqkp45eaMn6pKeOXmjpt/EnuSnIoyWPHbbsgyQNJnph8PH+2Y0oabS1H/q8BN5yw7TZg\nd1VdAeye3Jd0Bjlt/FX1I+DFEzbfCNw9uX038OHBc0masfU+57+oqg5Obj8HXDRoHklzMvULflVV\nQJ3q80l2JNmbZO8RXp92d5IGWW/8zyd5O8Dk46FTPbCqdlbVSlWtbGLzOncnabT1xn8/cMvk9i3A\nt8aMI2le1vKtvnuBfwauTHIgyceBzwN/lOQJ4PrJfUlnkNP+iu6q+sgpPuXv2pbOYL7DT2rK+KWm\njF9qyvilpoxfasr4paaMX2rK+KWmjF9qyvilpoxfasr4paaMX2rK+KWmjF9qyvilpoxfasr4paaM\nX2rK+KWmjF9qyvilpk576W6dmbLp7EHrjPkvUocPj1nn6NEh68gjv9SW8UtNGb/UlPFLTU0Vf5JP\nJ3k8yWNJ7k2yZdRgkmZr3fEnuRj4JLBSVe8CNgA3jRpM0mxNe9q/EXhLko3AVuCX048kaR7WHX9V\nPQt8AXgaOAi8VFXfGzWYpNma5rT/fOBG4HLgHcC2JDef5HE7kuxNsvcIr69/UklDTXPafz3wVFW9\nUFVHgPuA9534oKraWVUrVbWyic1T7E7SSNPE/zRwTZKtSQJsB/aPGUvSrE3znH8PsAt4CHh0stbO\nQXNJmrGpfmqjqm4Hbh80i6Q58h1+UlPGLzVl/FJTxi815ZV8lsxZ5547ZJ3Dv/fOIeu89Ntjrgh0\n4SP/NWSd/PhnQ9ap133DmUd+qSnjl5oyfqkp45eaMn6pKeOXmjJ+qSnjl5oyfqkp45eaMn6pKeOX\nmjJ+qSnjl5oyfqkp45eaMn6pKa/kM0IybqnffNuQdQ78xZEh6/z0D+4css4Vf/eXY9Z5+rwh6xx7\n/tCQdc5kHvmlpoxfasr4paaMX2pqqviTvDXJriQ/SbI/yXtHDSZptqZ9tf/LwHer6k+TnA1sHTCT\npDlYd/xJzgPeD/w5QFUdBg6PGUvSrE1z2n858ALw1SQPJ7kjybZBc0masWni3wi8G/hKVV0NvArc\nduKDkuxIsjfJ3iP4K5KkZTFN/AeAA1W1Z3J/F6tfDH5FVe2sqpWqWtnE5il2J2mkdcdfVc8BzyS5\ncrJpO7BvyFSSZm7aV/s/AdwzeaX/SeBj048kaR6mir+qHgFWBs0iaY58h5/UlPFLTRm/1JTxS015\nJZ8lk6PHhqxz+D+2DFnnH/57zDqbXhl0taNjY/5+5JFfasv4paaMX2rK+KWmjF9qyvilpoxfasr4\npaaMX2rK+KWmjF9qyvilpoxfasr4paaMX2rK+KWmjF9qKlU1t539Ri6o92T73PZ3Jjpry5gr53Dl\n5UOW+Z+LzxmyztYn/n3IOm889fSQdero0SHrLJs9tZuX68U1XTbJI7/UlPFLTRm/1JTxS00Zv9TU\n1PEn2ZDk4STfHjGQpPkYceS/Fdg/YB1JczRV/EkuAT4A3DFmHEnzMu2R/0vAZ4E3TvWAJDuS7E2y\n9wivT7k7SaOsO/4kHwQOVdWD/9/jqmpnVa1U1comNq93d5IGm+bIfy3woSS/AL4BXJfk60OmkjRz\n646/qj5XVZdU1WXATcD3q+rmYZNJmim/zy81tXHEIlX1Q+CHI9aSNB8e+aWmjF9qyvilpoY859c4\nb7z22piFHv3ZkGW27NswZJ1jx44NWYc3Bq0jj/xSV8YvNWX8UlPGLzVl/FJTxi81ZfxSU8YvNWX8\nUlPGLzVl/FJTxi81ZfxSU8YvNWX8UlPGLzVl/FJTxi815WW8fl0NutxVedmsX1se+aWmjF9qyvil\npoxfamrd8Se5NMkPkuxL8niSW0cOJmm2pnm1/yjwmap6KMm5wINJHqiqfYNmkzRD6z7yV9XBqnpo\ncvsVYD9w8ajBJM3WkOf8SS4Drgb2jFhP0uxN/SafJOcA3wQ+VVUvn+TzO4AdAFvYOu3uJA0y1ZE/\nySZWw7+nqu472WOqamdVrVTVyiY2T7M7SQNN82p/gDuB/VX1xXEjSZqHaY781wIfBa5L8sjkz58M\nmkvSjK37OX9V/ROQgbNImiPf4Sc1ZfxSU8YvNWX8UlPGLzVl/FJTxi81ZfxSU8YvNWX8UlPGLzVl\n/FJTxi81ZfxSU8YvNWX8UlPGLzVl/FJTxi81ZfxSU8YvNWX8UlPGLzVl/FJTxi81ZfxSU8YvNTXt\nr+i+IclPk/w8yW2jhpI0e9P8iu4NwN8CfwxcBXwkyVWjBpM0W9Mc+X8f+HlVPVlVh4FvADeOGUvS\nrE0T/8XAM8fdPzDZJukMsHHWO0iyA9gBsIWts96dpDWa5sj/LHDpcfcvmWz7FVW1s6pWqmplE5un\n2J2kkaaJ/1+AK5JcnuRs4Cbg/jFjSZq1dZ/2V9XRJH8N/COwAbirqh4fNpmkmZrqOX9VfQf4zqBZ\nJM2R7/CTmjJ+qSnjl5oyfqmpVNX8dpa8APzraR52IfBvcxhnrZzn9JZtps7z/FZVvW0tD5xr/GuR\nZG9VrSx6jjc5z+kt20zOszae9ktNGb/U1DLGv3PRA5zAeU5v2WZynjVYuuf8kuZjGY/8kuZgaeJf\ntusBJrk0yQ+S7EvyeJJbFz0TrF4+LcnDSb69BLO8NcmuJD9Jsj/Jexc8z6cn/1aPJbk3yZYFzHBX\nkkNJHjtu2wVJHkjyxOTj+fOe62SWIv4lvR7gUeAzVXUVcA3wV0swE8CtwP5FDzHxZeC7VfU7wO+y\nwLmSXAx8Elipqnex+pOmNy1glK8BN5yw7TZgd1VdAeye3F+4pYifJbweYFUdrKqHJrdfYfU/9kIv\nU5bkEuADwB2LnGMyy3nA+4E7AarqcFX952KnYiPwliQbga3AL+c9QFX9CHjxhM03AndPbt8NfHiu\nQ53CssS/1NcDTHIZcDWwZ7GT8CXgs8AbC54D4HLgBeCrk6chdyTZtqhhqupZ4AvA08BB4KWq+t6i\n5jnBRVV1cHL7OeCiRQ7zpmWJf2klOQf4JvCpqnp5gXN8EDhUVQ8uaoYTbATeDXylqq4GXmWBp7OT\n59E3svpF6R3AtiQ3L2qeU6nVb68txbfYliX+NV0PcN6SbGI1/Huq6r4Fj3Mt8KEkv2D1adF1Sb6+\nwHkOAAeq6s2zoV2sfjFYlOuBp6rqhao6AtwHvG+B8xzv+SRvB5h8PLTgeYDliX/prgeYJKw+n91f\nVV9c5CwAVfW5qrqkqi5j9e/n+1W1sCNbVT0HPJPkysmm7cC+Rc3D6un+NUm2Tv7ttrM8L4zeD9wy\nuX0L8K0FzvJ/Zn7p7rVY0usBXgt8FHg0ySOTbX8zuXSZVn0CuGfyBftJ4GOLGqSq9iTZBTzE6ndq\nHmYB76xLci/wh8CFSQ4AtwOfB/4+ycdZ/anWP5v3XCfjO/ykppbltF/SnBm/1JTxS00Zv9SU8UtN\nGb/UlPFLTRm/1NT/AqIgnH0fpaJPAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11d4ac610>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from scipy.special import erf\n",
    "size = 12\n",
    "# add some static offset to reflect arbitrary sampling\n",
    "_x = np.arange(size)-size//2+0.1\n",
    "_y = np.arange(size)-size//2+0.4\n",
    "_x, _y = np.meshgrid(_x, _y)\n",
    "sigma = 2./2.35\n",
    "psflet = (erf((_x + 0.5) / (np.sqrt(2) * sigma)) - \\\n",
    "    erf((_x - 0.5) / (np.sqrt(2) * sigma))) * \\\n",
    "    (erf((_y + 0.5) / (np.sqrt(2) * sigma)) - \\\n",
    "    erf((_y - 0.5) / (np.sqrt(2) * sigma)))\n",
    "\n",
    "psflet /= np.sum(psflet)\n",
    "psflet*=flux\n",
    "\n",
    "plt.imshow(psflet)\n",
    "print psflet[psflet/np.amax(psflet)>0.5]\n",
    "f = psflet[psflet/np.amax(psflet)>0.5]\n",
    "f /= np.sum(f)\n",
    "print f\n",
    "print (np.sum(f**2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x11c4cce50>"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYUAAAEKCAYAAAD9xUlFAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzs3Xd4VNXWwOHfSoEQSEILNUBCLwECCb0K0ruASpVeBMGG\nop/t6tWLivciXZqAIoh0pBfpRULv0rsQeieQ7O+PGWKAlANkMinrfZ554Jyzz5mVOLLmnL332mKM\nQSmllAJwcXYASimlkg5NCkoppaJoUlBKKRVFk4JSSqkomhSUUkpF0aSglFIqiiYFpZRSUTQpKKWU\niqJJQSmlVBQ3ZwfwtLJmzWr8/f2dHYZSSiUrW7duvWiM8Y2vXbJLCv7+/oSGhjo7DKWUSlZE5ISV\ndvr4SCmlVBRNCkoppaJoUlBKKRUl2fUpKKUc6/79+5w+fZq7d+86OxT1DDw8PPDz88Pd3f2Zztek\noJR6xOnTp/Hy8sLf3x8RcXY46ikYY7h06RKnT58mICDgma7hsMdHIjJBRC6IyJ5YjouIDBWRwyKy\nS0TKOioWpZR1d+/eJUuWLJoQkiERIUuWLM91l+fIPoWJQP04jjcACtlfPYBRDoxFKfUUNCEkX8/7\n385hj4+MMWtExD+OJs2Ayca2HugmEckoIjmNMeccEc/x/aGcWz8V0nohHl64pPPBLZ0P7p7epMmQ\nibSePqTzyoSnlw/p06bBxUX/p1BKpT7O7FPIDZyKtn3avu+JpCAiPbDdTZA3b95nerNLx3ZT4dR4\nXCT+NalvmHTcIh23xZM7Lum55+rJPdf0hLv78CBjftxyBpLJvyT58hXCJ32aZ4pHKRWzU6dO0bFj\nR86fP4+I0KNHD/r37w9Ap06dWL16Nd7e3ty5c4eKFSvy1Vdf4efn98R1atasyblz5/Dw8CBDhgxM\nmDCBIkWK8Pvvv/Pxxx8TGRnJ/fv36d+/Pz179uSzzz5j7Nix+PraJv3Wr1+fQYMGUbNmTQYPHkxI\nSEi8sR8/fpwNGzbQtm3bGI8PGDCAhQsX0rBhQwoUKICnpycdO3Zk4sSJ1K1bl1y5cj3Hby5hJIuO\nZmPMGGAMQEhISPz/qscguGFnIut15Nat69y5cYU7N69y79Y1wm9d5cHta0TcuU7k3etw9zqE38Al\n/AZu92/gdv8W3hE3SfvgEl73rpHxxgJbKvsTrpt07JQ8XEyXnzuZCuOWvRg++UqRN19+cvqk07sN\npZ6Bm5sb3333HWXLluXGjRsEBwdTp04dihcvDsC3335Lq1atMMYwZMgQatWqxZ49e0iT5skvaFOm\nTCEkJIQxY8YwYMAAZs6cSY8ePfjzzz/x8/Pj3r17HD9+PKr9W2+9xbvvvvvMsR8/fpxffvkl1qQw\nZswYLl++jKur6yP7J06cSGBgYKpPCmeAPNG2/ez7HMbF1ZX03plI753pma8RcfMSYUd3cO3ETh78\nvY8MVw7hf2cDPmcXw1lgO1wznmwnDxc8ArjtUwjJVgzvfCXxz+tPgWxe+rxWqTjkzJmTnDlzAuDl\n5UWxYsU4c+ZMVFJ4SER46623mD17NosWLaJZs2axXrN69eoMGTKEGzdu8ODBA7JkyQJA2rRpKVKk\nyFPHGBERwcCBA1m1ahX37t2jT58+9OzZk4EDB7J//36CgoJ47bXXeOutt6LOadq0KTdv3iQ4OJgP\nPviA/fv3kyFDhqjSPe3atSNdunRs3LiRdOnSPXVMCcWZSWEe0FdEpgEVgGuO6k9ISK4ZspCjVG1y\nlKr9yH5z8wLXT+7myvFdhJ/bS9Yrhyhyez0ZLiyGC8AeuGi8WepSkrDs1fAqUY/gwKL4ZfJ0zg+i\nlAX/mr+XfWevJ+g1i+fy5tMmJSy1PX78ONu3b6dChQqxtilbtiwHDhyIMynMnz+fkiVLkjlzZpo2\nbUq+fPmoXbs2jRs3pk2bNri42Mbc/O9//+Pnn38G4Ouvv6ZevXoxXm/8+PH4+PiwZcsW7t27R5Uq\nVahbty6DBg1i8ODB/P7770+cM2/ePDJkyMCOHTsA+OyzzwBo1aoVw4cPt/yIytEclhREZCpQE8gq\nIqeBTwF3AGPMaGAh0BA4DNwGOjsqlsQgGbLhU7w2PsWjJQtj4OZ57p7dw5Xju7h3chuV/l6P99/r\n4e9B7Fnmz6q0wdzO+wJ5StWgYsEcZNI+CqUAuHnzJi1btmTIkCF4e3vH2s42ViVmD799+/v7M2zY\nMADGjRvH7t27Wb58OYMHD2bZsmVMnDgRsP74aOnSpezatYsZM2YAcO3aNQ4dOhTjI6zkxpGjj9rE\nc9wAfRz1/kmCCHjlwKNIDnIWedG2LzISc343l3YsJMtfy3j1yhzcjszkxuF0rI8M5JB3BVwKvkjJ\nEoGU889MujSucb+HUg5k9Rt9Qrt//z4tW7akXbt2vPTSS3G23b59O7Vr147x2MM+hceVLFmSkiVL\n0qFDBwICAqKSglXGGIYNG/bEncSqVaue6jpJUbLoaE5RXFyQnKXJmrM0NPgA7l4j4shq7u5cSJUT\nK6l/awvsHM5f23Mz1QRxzrcKmYvXoELh3JTK7YObq5arUimbMYauXbtSrFgx3n777TjbDRs2jHPn\nzlG/flxTov5x8+ZNQkNDqVmzJgA7duwgX758Tx1jvXr1GDVqFLVq1cLd3Z2//vqL3Llz4+XlxY0b\nN576es96niNoUnA2Dx9cSzTFt0RT2+OmsIOEH1xK1r2L6Xh+KW6XF3BnbRo2ri7O165liSjWgnrl\nSlDOP7OOblIp0vr16/npp58oWbIkQUFBAHz11Vc0bNgQsA3r/OKLL7h9+zYVK1bkjz/+sPzYxhjD\nN998Q8+ePUmXLh3p06e3dJfQqFGjqFpClSpV4tdff+X48eOULVsWYwy+vr7MmTOHUqVK4erqSunS\npenUqdMjHc1x6dSpE7169UoSHc0S1/O4pCgkJMSkmkV2wm/B8fXc2b+EyL+Wkv7WScKNG4sjy7E8\nXX3yBdejRdk85PfN4OxIVQqyf/9+ihUr5uww1HOI6b+hiGw1xsTbk613CklZmvRQuC7pCte1bZ/f\nh4ROpP6OqTQN38jxDSP5dc0L7M/RmFohJWlSKpd2VCulnosmheQke3HcG30DdT+H/fPI9eePvH96\nGg8u/cayhWV5e0Ft3AvVpkXZPNQqlo20btpJrZR6OpoUkiN3Dyj1MmlKvQwXD+G2bRJ1tk2hwd0t\nnD02nql/1eC/7i9SrnQgLcvmpmzeTDphTilliSaF5C5rIaj7b9xqfQIHF5AjdCLvHJvBW8xi1Y4y\njNxSk2MZK9O0bF5alMlNvizpnR2xUioJ06SQUrilgRItcCnRAi4fw2X7T9Tc9jO1bn3HpbuTmLKq\nGm2X16Ro0RL0qJ6f8gGZ9e5BKfUEHfSeEmUOgNqf4PL2XnhlClkKlOUNtzms83iTlif+xcCxs2k+\ncgMLd58jIjJ5jT5TSjmWJoWUzNUdijWGdr8hb+5GqvSjgdtWVqQdQO8r3/L1Lwup9d0qftp0grv3\nI5wdrVJRunTpQrZs2QgMDHxkf6dOnQgICKB06dIULlyYjh07cvr06Riv8eDBAz788EMKFSpEUFAQ\nQUFBfPnll4kRPpUrV06Q64SFhVGhQgXKlCnD2rVradiwIVevXuXq1auMHDkyQd7jcZoUUouMeaDO\n50j/XbhU7kM9NvGHxwA+eTCcMXNXUHnQSoYs/4vLt8KdHalSdOrUicWLF8d47Ntvv2Xnzp0cPHiQ\nMmXKUKtWLcLDn/zcfvTRR5w9e5bdu3ezY8cO1q5dy/379x0dOgAbNmxIkOusWLGCkiVLsn37dqpV\nq8bChQvJmDGjJgWVgDL4Qt1/I/134lKhF7Ui1rHG412GpBvPjBUbqDxoBR/P2cOJS7ecHalKxapX\nr07mzJnjbPOwdHaOHDlYtGjRI8du377N2LFjGTZsGB4eHoCtlMTDyqQAzZs3Jzg4mBIlSjBmzJio\n/Rky/DMZdMaMGXTq1AmA3377jcDAQEqXLk316tUB2Lt3L+XLlycoKIhSpUpx6NChR65x8+ZNateu\nTdmyZSlZsiRz584FbNVfixUrRvfu3SlRogR169blzp07j/wMO3bs4L333mPu3LkEBQVx584d/P39\nuXjxIgMHDuTIkSMEBQUxYMAAq79WS7SjObXyyg71v0Kq9IN1/6N66I+sTbeMP30a8N6WOkzZfIIG\ngTnpUT0/pfNkdHa0ylkWDYS/dyfsNXOUhAaDEuxyMZXOPnz4MHnz5sXLyyvW8yZMmEDmzJm5c+cO\n5cqVo2XLllHrLMTk888/Z8mSJeTOnZurV68CMHr0aPr370+7du0IDw8nIuLRx7AeHh7Mnj0bb29v\nLl68SMWKFWnatCkAhw4dYurUqYwdO5aXX36ZmTNn0r59+6hzg4KC+PzzzwkNDWX48OGPXHfQoEHs\n2bMnqgx3QtI7hdTOKwc0+Br670BCulDh+hJWpX2HGXlmcPDQfpqNWM8rP2xk5YHzRGqntEqCrJTq\n+fHHHwkKCiJPnjycOmVbBXjo0KGULl2aihUrcurUqahv+bGpUqUKnTp1YuzYsVH/+FeqVImvvvqK\nr7/+mhMnTjxRs8gYw4cffkipUqV48cUXOXPmDOfPnwcgICAgqrZTcHDwIyvAOZPeKSgb71zQ8Fuo\n0h9Z+1/KbpvMMtff2VewBR9ceJEuEy9TOHsG3q5TmHolcuhw1tQiAb/RO0pMpbMLFizIyZMnuXHj\nBl5eXnTu3JnOnTsTGBhIREQEq1atYvny5WzcuBFPT09q1qzJ3bt3AR75bD/cB7a7gs2bN7NgwQKC\ng4PZunUrbdu2pUKFCixYsICGDRvyww8/UKtWrahzpkyZQlhYGFu3bsXd3R1/f/+oa6ZNmzaqnaur\n6xOPj5xF7xTUo3z8oPF/od82JKgtJc7OZG5EX1YUW0CmiEv0+nkbLUZuYPPRS86OVKVyxhiGDh0a\nY+lsT09PunbtSt++faP+EY6IiIjqkL527RqZMmXC09OTAwcOsGnTpqhzs2fPzv79+4mMjGT27NlR\n+48cOUKFChX4/PPP8fX15dSpUxw9epT8+fPTr18/mjVrxq5dux6J49q1a2TLlg13d3f++OMPTpw4\nkSA/uyNLbWtSUDHLmBeafA9vbEVKvUyB49OYdrc3C0qu5fLV67wyZhNdJ27h4N9Jowa8SlnatGlD\npUqVOHjwIH5+fowfPz7q2IABA6KGpG7ZsiXW0tlffvklOXPmJDAwkDJlylCtWjVee+01cuXKRf36\n9Xnw4AHFihVj4MCBVKxYMeq8QYMG0bhxYypXrhy1VvTD9y1ZsiSBgYFUrlyZ0qVLM336dAIDAwkK\nCmLPnj107NjxkRjatWtHaGgoJUuWZPLkyRQtWjRBfj9ZsmShSpUqBAYGJnhHs5bOVtZcPgYrPoe9\ns4jM6M+iPG8zcHcObt57QMuyfrxVpzC5MzqvBrxKOFo6O/l7ntLZDr1TEJH6InJQRA6LyMAYjmcS\nkdkisktE/hSRwJiuo5KAzAHQ+kfoOBcXV3ca7e7H1kITebucB/N2nOWFwav4z8L9XL2t8xyUSs4c\nlhRExBUYATQAigNtRKT4Y80+BHYYY0oBHYHvHRWPSiD5a0LvDVD7U9IcX8Ub+9qxpcZOmpf0Zcza\no1T/5g9Grz6iM6SVSqYceadQHjhsjDlqjAkHpgHNHmtTHFgJYIw5APiLSHYHxqQSglsaqPY29PkT\nCtbGZ8N/+OZCL1a3FEL8MzNo0QFeGLyK6aGntLZSMpXcHiurfzzvfztHJoXcwKlo26ft+6LbCbwE\nICLlgXyAnwNjUgkpYx54dQq0mwGRD8j7exsmpB/JzPb+ZPf24L0Zu2jw/RqW7zuv/8gkIx4eHly6\ndEn/myVDxhguXboUNYv7WTh7nsIg4HsR2QHsBrYDTzx3EJEeQA+AvHnzJmqAyoJCdeD1TbB+CKz9\nL8GHljK7xvssqdqcb5YdpdvkUMr5Z2Jgg6IE54u7dIFyPj8/P06fPk1YWJizQ1HPwMPDAz+/Z/9u\n7bDRRyJSCfjMGFPPvv0BgDHmP7G0F+AYUMoYcz226+rooyTu8lFY9D4cWgrZivOg/jf8GpaXIcsP\nEXbjHs2DcvF/jYrj65U2/msppRJMUhh9tAUoJCIBIpIGeBWYF72BiGS0HwPoBqyJKyGoZCBzfmg7\nHV6ZAvdu4Da5Me3OfMXq3sV5o1ZBFu7+21aue+Nx7W9QKglyWFIwxjwA+gJLgP3AdGPMXhHpJSK9\n7M2KAXtE5CC2UUr9HRWPSkQitnUc+myGqm/Dnpl4/lCRd3xWs6hfZUr5+fDx3L00H7GeXaevOjta\npVQ0OnlNOV7YX7DwXTi2GvJWxjQfyfxTafni931cvHmP9hXy8W69Ivikc3d2pEqlWEnh8ZFSNr6F\noeNcaD4Kzu9BRlelacRyVrxdndcq+TNl8wlqf7eK2dtP64gXpZxMk4JKHCIQ1BZ6r4dcZWDeG3jP\n7sBnL2RlXt+q+GXy5K1fd/LqmE0cOq/1lJRyFk0KKnFlzAsd50G9/8CRP2BkRQKvrWZW78p81aIk\nB/6+QYPv1/L14gPcDn/g7GiVSnXiTQoiki2GfUUcE45KFVxcoNLr0HONbQLc9A64zOlF29I+rHyn\nBs3L5GbUqiPU+e8alu077+xolUpVrNwprBWRlx9uiMg7wOw42itlTbai0G0FVH8Pdv8GIyuT5cIm\nBrcuzfSelciQ1o3uk0PpNmkLpy7fdna0SqUK8Y4+EpGcwBjgLpAd2/DSd4wxNx0f3pN09FEKdToU\nZveES4ehQm948VPuu6Tlx/XHGLL8EJHG8EatQnSvlp80bvrUU6mnlWCjj4wx54DFQCXAH5jkrISg\nUjC/EOi5Fsr3gM2j4IcauJ/fSY/qBVj+dg1qFs7Gt0sO0nzEevad1fmNSjmKlT6F5UAFIBBoBAwR\nkcGODkylQmk8betEt58F927AuBdh1dfk8nJjdIdgxnQI5sKNezQbsY6hKw5xPyLS2RErleJYuQ8f\nbozpaIy5aozZDVQGrjk4LpWaFawNr2+AEi1g1Vcwvi5cPETdEjlY9lZ1GgTm5L/L/qLFyPW6HKhS\nCUxnNKukbc8sWPA23L8Ldf5le7wkwuI95/i/2Xu4cfcB/V8sRM/q+XFz1b4GpWKTYH0KInJDRK7b\nX3dFJEJE9E5BJY7Al6D3RvCvCoveg6lt4PZl6gfmZOlb1alTIjvfLjlIy1EbdNKbUgnASkezlzHG\n2xjjDaQDWgKjHB6ZUg9554R2v0H9r+HwcvihBpzeSpYMaRnRtizD25bh5OXbNBq2jh9WH9Hqq0o9\nh6e63zY2c4B6DopHqZiJQMVe0GWJbXtCPdg0GoyhcalcLH2rBrWKZOM/iw7QavQGjoTpADmlnoWV\neQovRdt0AUKAGsaYSo4MLDbap6C4fRnmvA5/LYJiTaHZcPDwwRjD/F3n+GTuHu6ERzCgXhE6VwnA\n1UWcHbFSTme1T8FKUvgx2uYD4Dgw1hhz4bkifEaaFBQAxsCGYbD8M1s9pdYTIVcQABdu3OX/Zu9h\n2b7zhOTLxLetSxOQNb1Tw1XK2RIsKSQ1mhTUI05ugt86w+1LUP8/ENIFRDDGMGfHGT6du5fwiEje\nq1eUTpX9cdG7BpVKPXdSEJFhQKwZwxjT79nDe3aaFNQTbl2EWT3gyAoIbAVNhkBaLwDOX7/Lh7N2\ns+LABcoHZOa71qXJk9nTyQErlfgSIim8FteJxphJzxjbc9GkoGIUGQnr/gt/fGlbJ/rlyZC9BADG\nGGZuO8O/5u0F4N8tAmkWlNuZ0SqV6BIiKfxkjOkgIv2NMd8neITPSJOCitOxtTCzK9y9Bo2+gzLt\now6dunybN3/dwdYTV2hZ1o9/NStBhrRuTgxWqcSTEJPXgkUkF9BFRDKJSOboL4tB1BeRgyJyWEQG\nxnDcR0Tmi8hOEdkrIp2tXFepWAVUg17rIE95mNsHZveG8FsA5Mnsya89KtKvdiFmbz9N46Fr2Xnq\nqpMDVippiSspjAZWAEWBrY+94v2qLiKuwAigAVAcaCMixR9r1gfYZ4wpDdQEvhORNE/5Myj1qAzZ\noMMcqDEQdk6FsbUh7CAAbq4uvF2nMNN6VCL8QSQtR21g9OojROqEN6WAOJKCMWaoMaYYMMEYk98Y\nExDtld/CtcsDh40xR40x4cA0oNnjbwN4iYgAGYDL2Ia9KvV8XFzhhQ+gwyy4FQZjXoCdv0YdLh+Q\nmUX9q1O3RHYGLTpAhwmbOX/9rhMDVippsFLmovczXjs3cCra9mn7vuiGA8WAs8BuoL8xRushq4RT\noJbtcVLO0jC7Byx4FyLuA+Dj6c6ItmX5umVJtp24Sv0ha1iuy3+qVM7ZZSXrATuAXEAQMFxEvB9v\nJCI9RCRURELDwsISO0aV3HnnhNfmQ6W+sGUsTG4GN22fIxHhlXJ5mf9GVXL6pKPb5FA+mbuHu/cj\nnBy0Us7hyKRwBsgTbdvPvi+6zsAse02lw8AxbH0YjzDGjDHGhBhjQnx9fR0WsErBXN2g3pfw0jg4\nsxXG1ICz26MOF8yWgdl9KtOtagCTN56g2XBdq0GlTo5MCluAQiISYO88fhWY91ibk0BtABHJDhQB\njjowJpXalWptK6onLjC+HuyYGnUorZsrHzUuzqQu5bl0K5ymw9fx08bjJLdZ/0o9j1iTwmPrKDzx\niu/CxpgHQF9gCbAfmG6M2SsivUSkl73ZF0BlEdmNbaTT+8aYi8//YykVh1xB0GOVbdjqnF6waGBU\nPwNAjcK+LH6zGpUKZOHjuXvpPnkrl2+FOy1cpRKTlYJ4XwDngJ8AAdoBOY0xnzg+vCfp5DWVYCLu\nw9KPYfMo8K8GrSdB+ixRh40x/Lj+OIMWHSBTenf+93IQlQtmdWLASj27BFt5DWhqjBlpjLlhjLlu\njBnFk0NLlUp+XN2hwSBoPhpO/QljasK5nVGHRYQuVQOY06cKGdK60W78Zr5belAX8VEpmpWkcEtE\n2omIq4i4iEg74JajA1Mq0QS1gS6LwUTY+hl2z3jkcPFc3vz+RjVaB/sxbOVhOozfTNiNe04KVinH\nspIU2gIvA+ftr9b2fUqlHLnL2voZcpWx1U5a+hFE/DOPMl0aV75pVZpvW5Vi28krNBq6ls1HLzkt\nXKUcxcrktePGmGbGmKzGGF9jTHNjzPFEiE2pxJUhG3ScC+W62xbwmdLKtspbNK1D8kQ9TmozdhMj\nVx3WEhkqRYk3KYhIYRFZISJ77NulROQjx4emlBO4pYFGg6HpcDix3tbP8PeeR5oUzeHNvDeq0rBk\nTr5ZfJDuk0O5eltHJ6mUwcrjo7HAB8B9AGPMLmxzDpRKucp2gM6LICIcxteBvbMfOZwhrRvD2pTh\n82YlWHMojEZD17FDK66qFMBKUvA0xvz52D4tWqdSPr8Q6LEacpSE3zrZ1oOO/Kf8hYjQsZI/M3pV\nBqD16A1M2qCT3VTyZiUpXBSRAtiX5hSRVtjmLSiV8nllh9d+h+DOsO5/MK0t3H107mbpPBlZ0K8q\n1Qv58um8vfSdup0bd+/HckGlkjYrSaEP8ANQVETOAG8CveI+RakUxC2Nbd3nRt/BoWUwoR5cOfFI\nk4yeaRjbMYT36xdl8Z6/aTp8PfvPxTvxX6kkJ86kICIuQIgx5kXAFyhqjKlqjDkR13lKpUjlukH7\nmXD9DIx9AU5sfOSwi4vQu2YBfulWgVv3HtB8xHqmh56K5WJKJU1xJgX72gbv2f9+yxijZSNV6lbg\nBei2EtJlgklNYPuUJ5pUyJ+FBf2qEZwvE+/N2MWA33ZyJ1xLcavkwcrjo+Ui8q6I5HnaNZqVSpGy\nFoRuy8G/Csx93VY/KfLRf/R9vdLyU9cK9KtVkBnbTtNi5HqOht10UsBKWWelIN6xGHYbi0tyJjgt\niKeSjIj7sPgD28I9hetDy3GQ1uuJZqsOXuCtX3cQ/iCSwa1L06BkTicEq1K7BCuI99jazE+zRrNS\nKZuru22iW8PBtg7o8XWf6IAGqFkkGwv6VaNQdi96T9nGoEUHtKieSrKszGj2FJGPRGSMfbuQiDR2\nfGhKJRPlu0frgK71RAc0QK6M6fi1Z0XaVsjL6NVH6PTjn1zRNRpUEmSlT+FHIByobN8+A/zbYREp\nlRw97ID28IHJTWHHL080SevmylctSvJ1y5JsPnqZJsPXsefMNScEq1TsrCSFAsaYb/inzMVtbIvt\nKKWiy1oQuq+AvJVgTu8YO6ABXimXl+m9KhERaWg5agOzt592QrBKxcxKUggXkXT8M6O5AKDF5JWK\nSbpMtkdJ5brBhqEwrR3ce3Ikd1CejMx/oypBeTLy1q87+WzeXu5HRDohYKUeZSUpfAYsBvKIyBRs\naym/58iglErWXN1ts58bDoZDS20L98TQAZ01Q1p+7laBLlUCmLjhOO3G6eI9yvmsjD5aCrwEdAKm\nYpvhvMrKxUWkvogcFJHDIjIwhuMDRGSH/bVHRCJ0DoRKMcp3h/Yz4PrpWDug3V1d+KRJcb5/NYhd\np6/SeNhatp284oRglbKxMvpoPlAXWGWM+d0Yc9HKhUXEFRgBNACKA21EpHj0NsaYb40xQcaYIGzl\nuVcbYy4/eTWlkqkCtaDbin86oHdOi7FZs6DczOpdhTRuLrz6wyZ+2XwykQNVysbK46PBQDVgn4jM\nEJFWIuJh4bzywGFjzFFjTDgwDWgWR/s22O5ElEpZshayzYDOWxFm94SV/4bIJ/sPiufyZn7fqlQs\nkIUPZ+9m4Mxd3L2v5TFU4rLy+Gi1MeZ1ID+2aqkvAxcsXDs3EL0a2Gn7vieIiCdQH5gZy/EeIhIq\nIqFhYWEW3lqpJMYzM7SfBWU6wJpvbetA37/zRLOMnmn4sVM5+r5QkGlbTvHKmE2cvfpkO6Ucxcqd\nAvbRRy2xlcwuB0xK4DiaAOtje3RkjBljjAkxxoT4+vom8FsrlUhc3aHpMKjzuW0lt0lN4OaT369c\nXYR36xVhdPtgjly4SZNh69h09JITAlapkZU+henAfqAWMBzbvIU3LFz7DJAn2raffV9MXkUfHanU\nQASq9IeMv2TwAAAgAElEQVRXfrKt/Ty2NlzYH2PT+oE5mNOnCj6e7rQbt5nx647pqm7K4azcKYzH\nlgh6GWP+sJfTtmILUEhEAkQkDbZ/+Oc93khEfIAawFyrQSuV7BVrAp0XQsQ9W82kw8tjbFYwWwbm\n9qlC7aLZ+OL3fbwzfaf2MyiHspIUVgJ97J3MM0TkDRFxj+8kY8wDoC+wBNudxnRjzF4R6SUi0Vdu\nawEsNcbcepYfQKlkK3dZ6L4SMuaFKS/DlnExNvPycGd0+2DeqVOYWdvP8MoPG/n72t1EDlalFlZK\nZ48D3PmnH6EDEGGM6ebg2GKkpbNVinPvBszoCoeWQMXXoe6/wcU1xqZL9/7NW7/uwDOtG6PbBxOc\nL1MiB6uSqwQrnQ2UM8a8ZoxZaX91xtbZrJRKCGm9oM1UqNAbNo2EaW3hXswL8tQtkYPZfargmcaV\nNmM26XKfKsFZSQoR9npHAIhIfkAfaiqVkFxcocGgf0pj/FgfrsU8LqNwdi/m9qlChfyZeW/GLq2b\npBKUlaQwAPhDRFaJyGpsfQzvODYspVKp8t2h7W9w+bitNMbZ7TE2ezifoVtVW92k1ybo+gwqYcTb\npwAgImmBIvbNg8YYp1Xt0j4FlSqc3we/vAy3L8FLY6FY7Otazdx6mg9m7ya7d1rGdgyhaA7vRAxU\nJRcJ1qcgIn2AdMaYXcaYXYCniLyeEEEqpWKRvbitZlK2YvBre1g/FGL5Atcy2I9fe1Tk3v1IXhq5\ngcV7ziVysColsfL4qLsx5urDDWPMFaC740JSSgHglR06LYDizWDZxzC/H0Tcj7FpmbyZmP9GVQpn\n96LXz9v437K/iNR1oNUzsJIUXEUkaqU1e/XTNI4LSSkVxT0dtPoRqr0L2ybDzy3hztUYm2b39mBa\nj4q0Cvbj+xWH6PXzVm7ee5DIAavkzkpSWAz8KiK1RaQ2tnIUix0bllIqiosL1P4Ymo2EE+thQj24\ncjzGph7urnzbqhSfNC7OigMXeGnkek5c0nmhyjorSeF94A+gt/2lK68p5Qxl2kGH2XDjHIx7EU7H\nPOBCROhSNYBJnctz/vo9mg5fz7pDlpZBUcpS6exIYCLwf8aYVsaYH4wxOk9BKWcIqA5dl4O7J0xs\nBHvnxNq0aqGszOtbhezeaXntxz+ZoAX1lAVWRh81BXZgf2QkIkEi8kRhO6VUIvEtbKuZlKMU/PYa\nrBsS68ikfFnSM+t1W0G9z3/fx3szdnHvgX6nU7Gz8vjoU2yrqF0FMMbsAAIcGZRSKh7ps8Jr86HE\nS7D8U5jfP9aRSRnsdZL61SrIb1tP03bsZsJuOG2qkUrirCSF+8aYa4/t03tQpZzN3QNajodq78C2\nSTClNdx9/H9VGxcX4e26RRjetgx7z16j2fB17D0bc1uVullJCntFpC22oamFRGQYsMHBcSmlrHBx\ngdqfQLMRcHytbW2GKydibd64VC5m9KqMAVqN2sii3TrRTT3KSlJ4AygB3AN+Aa4BbzoyKKXUUyrT\n3rYG9PVzMK42nN4aa9PA3D7M7VuFojm96D1lG0OW60Q39Y84k4J9otrnxpj/M8aUs78+MsboCh9K\nJTX5a0C3ZfaRSQ1hX+yLGWbz8mBq94q8VDY3Q5Yfou/UbdwO14luKp6kYB96WjWRYlFKPS/fIraa\nSTlKwvTXYP33sY5M8nB35bvWpfmwYVEW7fmb1qM3cvbqnUQOWCU1Vh4fbReReSLSQUReevhyeGRK\nqWeTwdc+Mqk5LPsEfn8z1pFJIkKP6gWY8Fo5Tl66TdPh69l64koiB6ySEitJwQO4BNQCmthfsdfx\nVUo5n3s6aDkBqr4NWyfGOTIJ4IWi2Zj1emXSp7Wt6DZj6+nEi1UlKZbWU3jmi4vUB74HXIFxxphB\nMbSpCQzBtg70RWNMjbiuqespKPWUtv1ku1vIUgjaTYeMeWNteuVWOH1+2caGI5foXi2AgQ2K4eoi\nsbZXyUdCrtH8rAG4AiOABkBxoI2IFH+sTUZgJNDUGFMCaO2oeJRKtcp2gPYz4fpZGBv3yKRM6dMw\nqUt5OlbKx9i1x+g6aQvX78b86EmlTA5LCthmQR82xhw1xoQD04Bmj7VpC8wyxpwEMMZccGA8SqVe\n+WtC16W2CW8TG8G+2CvVuLu68HmzQL5sEci6QxdpMWI9xy5qpdXUItakICL97X9WecZr5wZORds+\nbd8XXWEgk339560i0jGWWHqISKiIhIaFhT1jOEqlctmKQreVkCMQpneMczU3gHYV8vFT1wpcvhVO\n8xFaaTW1iOtOobP9z2EOfH83IBhoBNQDPhaRwo83MsaMMcaEGGNCfH19HRiOUincw5FJD1dzi2Nk\nEkClAlmY26dqVKXVSRuOa6XVFC6upLBfRA4BRURkV7TXbhHZZeHaZ4A80bb97PuiOw0sMcbcMsZc\nBNYApZ/mB1BKPaWHq7lZHJmUN4sns16vwgtFfPl03l4+nL2H8AeRiRevSlSxJgVjTBugGnCYf4ai\nPhyO2sTCtbcAhUQkQETSAK8Cjz/InAtUFRE3EfEEKgD7n/qnUEo9HRcXePFTaDrcXjOpHlw9GWvz\nDGndGNMhhNdrFmDqnydpP34zl2+FJ2LAKrHEN6P5b2NMaeAc4GV/nTXGxF5x659zHwB9gSXY/qGf\nbozZKyK9RKSXvc1+bOs07AL+xDZsdc/z/EBKqafwFCOTXFyE9+oXZcgrQew4dZWmw9dx4O/riRis\nSgzxzlMQkRrAZOA4INgeCb1mjFnj8OhioPMUlHKACwfgl9ZwMwxeGgPFm8bZfMepq/SYHMqtew8Y\n8moZ6hTPnkiBqmeVkPMU/gvUNcbUMMZUx9Yh/L/nDVAplYQ85cikoDwZmde3KgWyZaDHT6GM+OOw\ndkCnEFaSgrsx5uDDDWPMX9hmHyulUpJHaibFPzIph48H03tWonGpXHy75CBv/rqDu/d1qc/kzs1C\nm1ARGQf8bN9uB+jzG6VSooc1kzIFwLr/2hbseXkSePjE2NzD3ZWhrwZRNIcX3y45yPGLtxjTMYTs\n3h6JHLhKKFbuFHoD+4B+9tc++z6lVEr0lCOTRIQ+LxRkTIdgDl24SdPh69h56moiBqwSkkML4jmC\ndjQrlYiOroJfO4JbWmgzDfyC42x+4O/rdJsUStiNe3zTqhTNgh4vYqCcxekF8ZRSKUD+mvbV3NLZ\naybFvpobQNEc3sztU4XSeTLSf9oOvll8QJf6TGY0KSil4vbIam4dYe1/4xyZlCVDWn7uWoE25fMw\nctURev68lZv3dKnP5EKTglIqfg9HJgW2hBX/grl94UHsM5rTuLnwVYuSfNakOCsPXKDlyA2cunw7\nEQNWzyrepCAihUVkrIgsFZGVD1+JEZxSKglx94CW46HG+7DjZ/j5Jbh9OdbmIkKnKgFM6lyec9fu\n0GzEejYdvZSIAatnYWVG805gNLAViBqEbIyJfT68A2lHs1JJwK7pMLcP+OSBdr9BlgJxNj928Rbd\nJm3hxKXbfNq0BB0q5kukQNVDCdnR/MAYM8oY86cxZuvDVwLEqJRKrkq9DB3nwd2rMK42HF8XZ/OA\nrOmZ3acK1Qv78vGcPXw4e7dWWk2irCSF+SLyuojkFJHMD18Oj0wplbTlq2TrgE7vC5Obw/YpcTb3\n9nBnbEdbpdVfNp+k3bhNXLx5L5GCVVZZeXx0LIbdxhiT3zEhxU0fHymVxNy5ahuVdGy1bY2GWh/b\nJsDFYd7Os7w3YyeZPdMwpmMIgbljnjGtEk6CPT4yxgTE8HJKQlBKJUHpMtrKbwd3spXGmNEJwuMe\nadS0dC5m9KoMQKvRG5i386zj41SWWBl95C4i/URkhv3VV0S0IJ5S6h+u7tB4CNT9EvbNs010u3E+\nzlMCc/swt29VSub2od/U7Xy9+AAROtHN6az0KYzCto7ySPsr2L5PKaX+IQKV+8Krv0DYARhbC/6O\ne80sX6+0TOlWkTbl8zJq1RG6Tw7l+t3YK7Mqx7OSFMoZY14zxqy0vzoD5RwdmFIqmSraELosBhMJ\nE+rBX0vjbJ7GzYX/vFSSL5oHsuavMFqMWM/RsJuJFKx6nJWkECEiUYOQRSQ/0eYrKKXUE3KWhu4r\nIHN+mPoKbBodZ2kMgA4V8/FztwpcuX2fZiPWs+rghUQKVkVnJSkMAP4QkVUishpYCbxj5eIiUl9E\nDorIYREZGMPxmiJyTUR22F+fPF34SqkkyzuX7Y6hSENY/D4sfBci4q6BVDF/Fub2qYJfJk+6TNzC\nD6uP6IpuicxS6WwRSQsUsW8eNMbEO7hYRFyBv4A6wGlgC9DGGLMvWpuawLvGmMZWA9YhqUolM5GR\nsPxT2DAUCtSCVj/aRizF4Xb4Awb8tosFu8/RPCgXg1qWwsPdNZECTpmee0iqiNSy//kS0AgoaH81\nsu+LT3ngsDHmqDEmHJgGNLMSvFIqBXFxgbpfQNNhcGwtjHsRLh2J8xTPNG4Mb1uGd+sWZs6Os7z8\nw0bOXbuTSAGnbnE9Pqph/7NJDC8r3+xzA6eibZ+273tcZRHZJSKLRKSEhesqpZKjsh2h41y4fck2\nMuno6jibiwh9axVibMcQjly4SZNh6wk9HnsBPpUwYk0KxphP7X/93BjTOfoL+CKB3n8bkNcYUwoY\nBsyJqZGI9BCRUBEJDQsLS6C3VkolOv8q0H0leOWwVVkNnRDvKXWKZ2d2nypkSOtKm7Gb+Gnjce1n\ncCArHc0zY9g3w8J5Z4A80bb97PuiGGOuG2Nu2v++EHAXkayPX8gYM8YYE2KMCfH19bXw1kqpJCtz\nAHRdBvlfgN/fgoXvxdsBXTi7F3P7VKVqwax8PHcv783Yxd37OgjSEdxiOyAiRYESgM9jfQjegIeF\na28BColIALZk8CrQ9rH3yAGcN8YYESmPLUlpwXWlUjoPb2j7Kyz7BDYOh0uH4u2A9vF0Z/xr5Riy\n/C+GrjzMwfM3GNU+mNwZ0yVi4ClfXHcKRbD1HWTk0f6EskD3+C5sjHkA9AWWAPuB6caYvSLSS0R6\n2Zu1AvbY12wYCrxq9L5QqdTBxRXqfflUHdAuLsLbdYswpkMwR8Nu0WTYOjYcuZhIAacOVqqkVjLG\nbEykeOKlQ1KVSoGOr4df29tmQb88GfLXiPeUwxdu0vOnUI5fus0HDYrStWoAIpIIwSZPCbnITi8R\nibqnE5FMIhJ/75BSSln1DB3QBbNlYE6fKrxYLBv/XrCf/tN2cCdc+xmel5WkUMoYc/XhhjHmClDG\ncSEppVKlZ+iA9vJwZ1S7YAbUK8L8XWdpMXI9Jy/FXbZbxc1KUnARkUwPN+yrrsXaQa2UUs/sYQd0\npb7w5w/wS2vbIj5xcHER+rxQkB87lePs1Ts0Gb6O1X/p0PVnZSUpfAdsFJEvROTfwAbgG8eGpZRK\ntZ6hAxqgZpFszH+jKjl9POj045+M+OOwzmd4BlZWXpsMtATOA38DLxljfnJ0YEqpVO4pZ0AD5MuS\nnlmvV6ZxqVx8u+QgvX/exs17cT+CUo+ycqeAMWYvMB2YB9wUkbwOjUoppeDJDugt4+Itwe2Zxo2h\nrwbxUaNiLNt/nuYj1nNE12ewzMpynE1F5BBwDFgNHAcWOTgupZSyedgBXaA2LHgH5veHB3EXahYR\nulXLz09dy3P5VjjNh69n2b64lwdVNlbuFL4AKgJ/GWMCgNrAJodGpZRS0Xl4Q5upUO0d2DYJJjWJ\ndw1ogMoFsjL/jar4Z01P98mhDF5yUNeBjoeVpHDfGHMJ2ygkF2PMH0C8EyCUUipBubhC7U+g9UT4\nezeMqQlntsZ7Wu6M6fitVyVeDvFj+B+H6TB+M2E34l0SJtWykhSuikgGYA0wRUS+B245NiyllIpF\niRbQdSm4usGEBrDjl3hP8XB35ZtWpfmmVSm2nrhCo6Fr+fOYluGOiZWk0Ay4DbwFLAaOYKuBpJRS\nzpGjJHRfBXkrwJzesPiDeCe6AbwckofZr1fBM42tDPeYNbrc5+PiTAr2JTV/N8ZEGmMeGGMmGWOG\n2h8nKaWU86TPAu1nQ4XesGkk/NwCbsf/7b94Lm/mvVGVusWz89XCA/T8aSvX7txPhICThziTgjEm\nAogUEZ9EikcppaxzdYMGg6DZSDi52dbP8PeeeE/z9nBnZLuyfNK4OCsPXKDJsHXsOXPN8fEmA1Ye\nH90EdovIeBEZ+vDl6MCUUsqyMu2g8yKICIfxdWBvjIs4PkJE6FI1gF97VuJ+RCQvjdrAL5tPpvrH\nSVaSwizgY2wdzVujvZRSKunwC4YeqyB7IPz2Gqz4HCIj4z0tOF8mfn+jKhUCMvPh7N28M30nt8NT\n7yzoWNdTEJG8xpiTiRxPvHQ9BaVUnB7cs01y2/4TFK4PL40Bj/ifgEdEGoatPMT3Kw5RKFsGRrYL\npmC2DIkQcOJIiPUUou6/RCSmdZqVUirpcUtrK6bXcDAcXg5ja8PFQ/Ge5uoivPliYSZ3Kc/Fm+E0\nG76OeTvPJkLASUtcSSH6Ekb5HR2IUkolGBEo391WUO/OZVtBvb+WWDq1WiFfFvSrStGc3vSbup1P\n5+7h3oPUs3hPXEnBxPJ3pZRKHvyr2voZMvnDL6/A6m8s9TPk9EnHtB4V6VY1gEkbT/DyD5s4fSV1\nLN4TV1IoLSLXReQGUMr+9+sickNErlu5uIjUF5GDInJYRAbG0a6ciDwQkVZP+wMopVScMuaFLkug\nZGv440uY+ircuRLvae6uLnzUuDij25fl6IWbNB62jhX7U35RvViTgjHG1RjjbYzxMsa42f/+cNs7\nvgvbJ76NABoAxYE2IlI8lnZfA0uf/cdQSqk4pPG0dTg3HAxHVsIP1eHsDkun1g/MaV+8Jx1dJ4Xy\n2by9KfpxkqX1FJ5ReeCwMeaoMSYcmIatZMbj3gBmAhccGItSKrV72M/QZTFERsD4urBtsqVT/bOm\nZ/brlelU2Z+JG47TYsSGFLtGgyOTQm7gVLTt0/Z9UUQkN9ACGOXAOJRS6h9+IdBzDeSrBPPegLl9\n4P6deE/zcHfls6YlGNcxhHPX7tB46Dqmh55KcZPdHJkUrBgCvG+MibPnR0R6iEioiISGhemC3Eqp\n55Q+K7SfBdUHwPafbbOgLx+zdOqLxbOzqH91Sufx4b0Zu+g/bQfX76ac2kmOTApngDzRtv3s+6IL\nAaaJyHGgFTBSRJo/fiFjzBhjTIgxJsTX19dR8SqlUhMXV6j1EbSdDldPwpgacHCxpVNz+HgwpVtF\n3q1bmAW7z9Fo6Fq2n4y/8zo5cGRS2AIUEpEAEUkDvIptjecoxpgAY4y/McYfmAG8boyJv2iJUkol\nlML1bI+TMuaDqa/Aii9sfQ7xcHUR+tYqxPSeFYmMhNajNzJq1REik/nKbg5LCsaYB0BfYAmwH5hu\njNkrIr1EpJej3lcppZ5aJn/bwj1lOsDawfBTC7h10dKpwfkys7BfNeoUz87Xiw/QccKfXLhx17Hx\nOlCstY+SKq19pJRyqG2TYcG7tn6H1pMgTzlLpxljmLblFP+av5f0adwY/HJpXiiSzcHBWpcQtY+U\nUir1KdsRui0DFzf4sQH8ORYsfHkWEdqUz8v8vlXJmiEtnX/cwr9/30f4g/hnUCclmhSUUupxOUtD\nz9VQoBYsfBdmdYdwa0vTF8ruxdy+VehQMR/j1h2j5agNHLuYfJa116SglFIxSZcJ2kyDWh/Dnpm2\naqthf1k61cPdlS+aBzK6fTAnL9+m8dC1zNp22sEBJwxNCkopFRsXF6j+rm1Ow60LtmGr23+29DgJ\noH5gDhb1r0aJXD68PX0n/aZu5+rtcAcH/Xw0KSilVHwKvAC91kPuYNsM6Jnd4K6luqDkypiOX7pX\n4O06hVm4+xz1hqxhzV9JdxKuJgWllLLCO6dtfYZaH8He2baiemesrUzs5upCv9qFmPV6Zbw83Ok4\n4U8+nrMnSS77qUlBKaWscnG1lcbovBAi7tuK6q0fammNBoBSfhn5/Y2qdK0awE+bTtDw+7VsPZG0\nZkJrUlBKqaeVtyL0WmtbA3rZx/BLa7hp7ZGQh7srHzcuzi/dK3A/wtB69Aa+XXIgyQxd1aSglFLP\nwjMzvPIzNPoOjq2F0VXgyB+WT69cICuL3qzGS2X9GPHHEZqPWM/Bv284MGBrNCkopdSzEoFy3aD7\nSvDIaCuPsfwz26MlC7w93BncujQ/dAjm/PW7NBm2jjFrjhDhxPpJmhSUUup55QiEHn9A2Q6w7n+2\nmdBXTlg+vV6JHCx5qzo1ivjy1cIDtBm7iVOXnbMmtCYFpZRKCGnSQ9Nh0GoChB2E0dVso5Qsypoh\nLWM6BDO4dWn2nb1O/SFr+HXLyURfxEeTglJKJaTAlrZO6KwF4bdOML8/hFv71i8itAr2Y/Gb1Sjl\nl5H3Z+6m26TQRK26qklBKaUSWiZ/6LIEqvSHrRNhbC04v8/y6X6ZPJnSrQIfNy7O2sMXqfe/NSza\nfc5h4UanSUEppRzB1R3qfG4rkXH7Iox9ATaPsTynwcVF6Fo1gAVvVMUvkye9p2xj8JKDDg5ak4JS\nSjlWwdrQewP4V4VFA+DnFnDNenG8Qtm9mPV6ZfrVLkTtYo5fn0EX2VFKqcRgDGz9EZZ8ZJsZ3eBr\nKN3GNqw1EegiO0oplZSIQEgX6L0esgfCnN4wrS3cvODsyB6hSUEppRJT5gDo9DvU/TccXgEjK8K+\nuc6OKopDk4KI1BeRgyJyWEQGxnC8mYjsEpEdIhIqIlUdGY9SSiUJLq5Q+Q3ouQZ88sD0jrZy3Hec\nXxzPYUlBRFyBEUADoDjQRkSKP9ZsBVDaGBMEdAHGOSoepZRKcrIVhW7LoeaHtoluIyvBoeVODcmR\ndwrlgcPGmKPGmHBgGtAsegNjzE3zT093eiB59XorpdTzcnWHmu/bkoNHRpjS0jbh7Z5ziuM5Mink\nBk5F2z5t3/cIEWkhIgeABdjuFpRSKvXJVQZ6rILK/WDrJBhVBY6vT/QwnN7RbIyZbYwpCjQHvoip\njYj0sPc5hIaFJd1l7JRS6rm4e0DdL6DzIttopYmNYMn/wf07iRaCI5PCGSBPtG0/+74YGWPWAPlF\nJGsMx8YYY0KMMSG+vr4JH6lSSiUl+SrZ1oQu1xU2DocfasCZbYny1o5MCluAQiISICJpgFeBedEb\niEhBEdvMDREpC6QFLjkwJqWUSh7SZrAt4NN+lq1/YdyLsHGkw9/WzVEXNsY8EJG+wBLAFZhgjNkr\nIr3sx0cDLYGOInIfuAO8YpLbFGullHKkgrXh9Y2w6H3IUsDhb6dlLpRSKhXQMhdKKaWemiYFpZRS\nUTQpKKWUiqJJQSmlVBRNCkoppaJoUlBKKRVFk4JSSqkomhSUUkpFSXaT10QkDDjxjKdnBS4mYDgJ\nLanHB0k/Ro3v+Wh8zycpx5fPGBNv8bhklxSeh4iEWpnR5yxJPT5I+jFqfM9H43s+ST0+K/TxkVJK\nqSiaFJRSSkVJbUlhjLMDiEdSjw+Sfowa3/PR+J5PUo8vXqmqT0EppVTcUtudglJKqTikmKQgIvVF\n5KCIHBaRgTEcFxEZaj++y77Sm6VzEym+dva4dovIBhEpHe3Ycfv+HSLikMUkLMRXU0Su2WPYISKf\nWD03keIbEC22PSISISKZ7ccS4/c3QUQuiMieWI47+/MXX3zO/vzFF5+zP3/xxefUz1+CMsYk+xe2\nld2OAPmBNMBOoPhjbRoCiwABKgKbrZ6bSPFVBjLZ/97gYXz27eNAVif//moCvz/LuYkR32PtmwAr\nE+v3Z3+P6kBZYE8sx532+bMYn9M+fxbjc9rnz0p8zv78JeQrpdwplAcOG2OOGmPCgWlAs8faNAMm\nG5tNQEYRyWnxXIfHZ4zZYIy5Yt/cBPglcAzPFZ+DznVUfG2AqQkcQ5yMMWuAy3E0cebnL974nPz5\ns/L7i02S+P09JtE/fwkppSSF3MCpaNun7fustLFybmLEF11XbN8qHzLAchHZKiI9Eji2p4mvsv0R\nwyIRKfGU5yZGfIiIJ1AfmBltt6N/f1Y48/P3tBL782eVsz5/liXhz59lbs4OQD1KRF7A9j9l1Wi7\nqxpjzohINmCZiBywf3NJTNuAvMaYmyLSEJgDFErkGKxoAqw3xkT/VpcUfn/Jgn7+nluy//yllDuF\nM0CeaNt+9n1W2lg5NzHiQ0RKAeOAZsaYSw/3G2PO2P+8AMzGdsucqPEZY64bY27a/74QcBeRrFbO\nTYz4onmVx27dE+H3Z4UzP3+WOPHzFy8nf/6eRlL9/Fnn7E6NhHhhu+M5CgTwT2dTicfaNOLRjr4/\nrZ6bSPHlBQ4DlR/bnx7wivb3DUB9J8SXg3/mtZQHTtp/l0ni92dv54PtuW/6xPz9RXsvf2LvKHXa\n589ifE77/FmMz2mfPyvxJYXPX0K9UsTjI2PMAxHpCyzBNhphgjFmr4j0sh8fDSzENgLkMHAb6BzX\nuU6I7xMgCzBSRAAeGFthrezAbPs+N/j/9u4nxKoyDuP497FERCMXIym2GDIiImwqJZLaJOTOtMYM\n2mdRRgUVhuDeWQYGRX9WKlgIkqADLepWWJIVJoJSbVooLfpnDET6tHjfe7qBc+eO3PHG3OezOXfm\nnvc9v3M48DvnvPf8XvbZPjqA+MaBZyT9DUwBT7ic6f+X4wewBZi0/WdH8zk/fgCS9lN+ITMi6Sdg\nN7CwI76BnX89xjew86/H+AZ2/vUYHwzw/OunvNEcERGN+TKmEBERfZCkEBERjSSFiIhoJClEREQj\nSSEiIhpJCjHv1YqV7eqVB2spAiR9fpX9jU5XLbNLmwlJp+tyuaQvJH0t6cFZ9rNZ0h2ziziid0kK\nMQymbI/ZvhP4C2i/37D+GsbwFLDG9svABuCU7bttt2bZz2YgSSHmTJJCDJsWcCuApIt1uUXSRypW\nSjoraYWk6+qV/YlaiG17t45r+4l6R3JK0rb6/8PAUuArSa8Ce4BH6t3LEknvdbR5sbZZLeloLaLW\nkrUN/FsAAAHOSURBVHS7pPXAJmCitl09Z0cphta8eKM5oheSrqfMFfCfN0ptH5L0GPAspcLlbtvn\na0XL32yvk7QI+EzSJKXq5ZU8CowBdwEjwAlJn9jeJOmi7bEaxwVgre3nJN0LrKp3MUhaVvt6E3ja\n9jlJ9wF7bT9UE8yHtt/v24GJ6JCkEMNgsaRv6ucW8PYV1tkBfAcct90uaPYwsEbSeP37RkplzrPT\nbOcBYL/tS8AFSR8D64DDXWL7AbhF0uvAEWBS0lLKpDcHa3kEgEUz7GNEXyQpxDCYal+ld3EzcBm4\nSdIC25cpBdd22D7WuaKk0X4FZvsXlakvN1LGOh4HXgB+7SHmiL7LmEIMvfpY6R3KjFlngJfqV8co\nRdgW1vVuk7SkS1ctYFsdi1hOmcLxyxm2PQIssP0BsAu4x/bvwI+SttZ1pH/nTP4DuOFq9jOiF7lT\niIDXgJbtTyV9SxkLOEKZW2AUOKnyHOdnyq9/pnMIuJ9SvtnAK7bPz7DtVcC7ktoXaDvr8kngDUm7\nKNU4D9R+DwBvSXoeGLf9/ex2NaK7VEmNiIhGHh9FREQjSSEiIhpJChER0UhSiIiIRpJCREQ0khQi\nIqKRpBAREY0khYiIaPwDtDqmsV1v96IAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11c4cc910>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "offsets = np.arange(0.0,2.,0.1)\n",
    "measured_values_psflet = np.zeros(len(offsets))\n",
    "for i in range(len(offsets)):\n",
    "    offset = offsets[i]\n",
    "    matched_filter = (erf((_x + 0.5-offset) / (np.sqrt(2) * sigma)) - \\\n",
    "                            erf((_x - 0.5-offset) / (np.sqrt(2) * sigma))) * \\\n",
    "                            (erf((_y + 0.5) / (np.sqrt(2) * sigma)) - \\\n",
    "                            erf((_y - 0.5) / (np.sqrt(2) * sigma)))\n",
    "    matched_filter /= np.sum(matched_filter)\n",
    "    matched_filter /= np.sum(matched_filter**2)\n",
    "    measured_values_psflet[i] = np.sum(psflet*matched_filter)\n",
    "    \n",
    "plt.plot(offsets,measured_values_psflet/flux)\n",
    "plt.xlabel(\"Pixel offset\")\n",
    "plt.ylabel(\"Fraction of recovered flux\")\n",
    "plt.plot(offsets,measured_values)\n",
    "plt.legend([\"2D PSFLet fit\",\"1D Gaussian fit\"])\n",
    "# mf = np.exp(-(offsets)**2/2./sig**2/2.)\n",
    "#plt.plot(offsets,mf)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
